Parameters:
    EnvironmentName:
        Type: String
        Description: Name of the environment
        Default: Dev
        
    CIDR:
        Type: String
        Description: the CIDR block of project
        Default: ""

    PublicSubnet1CIDR:
       Type: String
       Description: "Public Subnet 1 cidr"

    MyIP:
      Type: String
      Description: Public Ip of adress able to access bastion
      
    ImageID:
      Type: String
      Description: AMI id for linux 2 which comes with awscli and other useful tools preinstalled
      Default: ami-0d6621c01e8c2de2c
      
    KeyName:
      Type: String
      Description: SSH key to access jenkins insrtance
      Default: "ec2-operations"
    
    InstanceType:
      Type: String
      Description: "EC Type for jenkins machine"
      Default: "t2.small"
      
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDR
      EnableDnsSupport: true
      Tags:
        - Key: env
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: env
          Value: !Ref EnvironmentName

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: env
          Value: !Ref EnvironmentName
  
  PublicRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Routes
  
  DefaultPublicRoute1: 
        Type: AWS::EC2::Route
        DependsOn: AttachGateway
        Properties:
            RouteTableId: !Ref PublicRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
  
  PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable1
            SubnetId: !Ref PublicSubnet1

  
  JenkinsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow http to client host"
      GroupName: "JenkinsSG"
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: !Ref MyIP
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref MyIP
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  JenkinsServer:
    Type: AWS::EC2::Instance
    DependsOn: "InternetGateway"
    Properties:
        InstanceType:
            Ref: "InstanceType"
        KeyName:
            Ref: "KeyName"
        ImageId: !Ref ImageID
        NetworkInterfaces: 
            - GroupSet: 
                - Ref: "JenkinsSG"
              AssociatePublicIpAddress: true
              DeviceIndex: "0"
              DeleteOnTermination: true
              SubnetId: 
                  Ref: "PublicSubnet1"
        IamInstanceProfile: !Ref ProfileEKSJenkins
        UserData:
            Fn::Base64: !Sub |
                #!/bin/bash
                service jenkins start
                chkconfig jenkins on
          
  ProfileEKSJenkins:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref ProfileJenkinsAllRole
  
  ProfileJenkinsAllRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Description: Role to allow reading from bucket
      RoleName: ProfileJenkinsAllRole
      Tags: 
        - Key: env
          Value: !Ref EnvironmentName
  
  JenkinsAllPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: JenkinsAllPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "s3:Get*"
              - "s3:List*"
              - "iam:*"
              - "s3:*"
              - "ecs:*"
              - "cloudformation:*"
              - "ec2:*"
              - "ecr:*"
              - "eks:*"
            Resource: '*'
      Roles:
        - !Ref ProfileJenkinsAllRole

Outputs:
  # outputs that can be used for the future deployment of ssh bastions
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID
  
  VPCPublicSubnet1:
    Value: !Ref PublicSubnet1  
    Export: 
        Name: !Sub ${EnvironmentName}-PUSN1

  